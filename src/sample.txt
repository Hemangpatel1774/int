import React, { useState } from "react";
import imageCompression from "browser-image-compression";

function ImageCompressor() {
  const [compressedImage, setCompressedImage] = useState(null);

  const handleImageUpload = async (event) => {
    const imageFile = event.target.files[0];

    if (imageFile) {
      try {
        // Compression options
        const options = {
          maxSizeMB: 1, // Max file size in MB
          maxWidthOrHeight: 800, // Max width/height
          useWebWorker: true, // Use WebWorker for better performance
        };

        // Compress the image
        const compressedFile = await imageCompression(imageFile, options);

        // Convert the compressed file to a Blob URL to preview
        const compressedImageURL = URL.createObjectURL(compressedFile);
        setCompressedImage(compressedImageURL);

        console.log("Compressed file size:", compressedFile.size / 1024, "KB");
      } catch (error) {
        console.error("Error during compression:", error);
      }
    }
  };

  return (
    <div>
      <h1>Image Compressor</h1>
      <input type="file" accept="image/*" onChange={handleImageUpload} />
      {compressedImage && (
        <div>
          <h3>Compressed Image:</h3>
          <img src={compressedImage} alt="Compressed" />
        </div>
      )}
    </div>
  );
}

export default ImageCompressor;
